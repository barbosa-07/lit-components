{"version":3,"file":"simple-carousel.js","sourceRoot":"","sources":["src/simple-carousel.ts"],"names":[],"mappings":";;;;;;AAAA,OAAO,EAAC,UAAU,EAAE,IAAI,EAAC,MAAM,KAAK,CAAC;AACrC,OAAO,EAAC,aAAa,EAAE,QAAQ,EAAC,MAAM,mBAAmB,CAAC;AAG1D,IAAa,cAAc,GAA3B,MAAa,cAAe,SAAQ,UAAU;IAA9C;;QAEE,SAAI,GAAG,SAAS,CAAC;QAEjB,UAAK,GAAG,KAAK,CAAC;IAkBhB,CAAC;IAhBU,MAAM;QACb,OAAO,IAAI,CAAA;;;;8BAIe,IAAI,CAAC,KAAK;;;;;;;;;KASnC,CAAC;IACJ,CAAC;CACF,CAAA;AApBC;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;4CACR;AAEjB;IADC,QAAQ,CAAC,EAAC,IAAI,EAAE,MAAM,EAAC,CAAC;6CACX;AAJH,cAAc;IAD1B,aAAa,CAAC,iBAAiB,CAAC;GACpB,cAAc,CAsB1B;SAtBY,cAAc","sourcesContent":["import {LitElement, html} from 'lit';\nimport {customElement, property} from 'lit/decorators.js';\n\n@customElement('simple-carousel')\nexport class SimpleCarousel extends LitElement {\n  @property({type: String})\n  name = 'default';\n  @property({type: String})\n  color = 'red';\n\n  override render() {\n    return html`\n      <style>\n        button {\n          /* Warning: this approach has limitations & performance issues! */\n          background-color: ${this.color};\n        }\n      </style>\n      <div>\n        <button part=\"button-one\">Click Me</button>\n        <button part=\"button-two\">Click Me</button>\n        <button part=\"button-one\">Click Me</button>\n        <button>Click Me</button>\n      </div>\n    `;\n  }\n}\n\ndeclare global {\n  interface HTMLElementTagNameMap {\n    'simple-carousel': SimpleCarousel;\n  }\n}\n"]}